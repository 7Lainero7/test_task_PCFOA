from src.app.models.task import Task
from src.app.models.user import User

"""init

Revision ID: ca753104d169
Revises: 
Create Date: 2025-07-25 02:53:28.909757

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ca753104d169'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='PCF'
    )
    with op.batch_alter_table('users', schema='PCF') as batch_op:
        batch_op.create_index(batch_op.f('ix_PCF_users_username'), ['username'], unique=True)

    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'in_progress', 'done', name='taskstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['PCF.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='PCF'
    )
    with op.batch_alter_table('tasks', schema='PCF') as batch_op:
        batch_op.create_index(batch_op.f('ix_PCF_tasks_title'), ['title'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tasks', schema='PCF') as batch_op:
        batch_op.drop_index(batch_op.f('ix_PCF_tasks_title'))

    op.drop_table('tasks', schema='PCF')
    with op.batch_alter_table('users', schema='PCF') as batch_op:
        batch_op.drop_index(batch_op.f('ix_PCF_users_username'))

    op.drop_table('users', schema='PCF')
    # ### end Alembic commands ###
